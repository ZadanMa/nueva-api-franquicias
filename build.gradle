plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "4.4.1.3373"
    id "jacoco"
}

group = 'proyecto.nequi'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'


    implementation 'com.mysql:mysql-connector-j:8.0.33'
    implementation 'io.asyncer:r2dbc-mysql:1.0.2'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'

    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-api:2.8.6'

    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:r2dbc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sonarqube {
    properties {
        property "sonar.projectKey", "api-franquicias-nequi"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", System.getenv("SONAR_TOKEN")
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

jacoco {
    toolVersion = "0.8.13"
    reportsDirectory = file("$buildDir/reports/jacoco")
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '-parameters'
}
tasks.named('test') {
    useJUnitPlatform()
}
